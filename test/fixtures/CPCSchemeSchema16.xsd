<?xml version="1.0" encoding="UTF-8"?>
<!--
	*****************************************************************************
	* CPC scheme schema *
	* *
	* Definition of CPC scheme structure
	* *
	
	* Author :  USPTO, EPO
	* Version 1.6
	* Last Update : 04-01-2015
	* Contact: cpc@epo.org and/or at cpc@uspto.gov
	* *
	*================================================*
	*Revision History*
	
	* CPC Schema version 1.6 
	* Last update 10-16-2014
	* * change level, sort-key attributes from optional to required
	* * added @warning-type to note-paragraph
	* * added@type to subnote
	* * added file-name attribute to media element
	* * added status, ipc-concordant, definition-exists attributes to classfication-item
	* * added sup, sub element to markup type
	* * removed "interleaved",'non-interleaved" value to publication-type attribute
	* * enhanced pattern restriction for symbols
	
	* CPC Schema version 1.5
	* Last Update: 01-31-2014
	* * Added "non-interleaved" value to publication-type attribute
	*
	* CPC Schema version 1.4
	* Last Update: 09-09-2013
	* * added validation of level attribute
	*
	* CPC Schema version 1.3
	* Last Update: 28-03-2012
	* * added 'interleaved' value to production-type
	
	* *
	
	*****************************************************************************
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sch="http://www.ascc.net/xml/schematron" elementFormDefault="qualified">
	<xs:element name="class-scheme">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="classification-item" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="scheme-type" type="classification-scheme-list" use="required"/>
			<xs:attribute name="publication-date" type="xs:date" use="required"/>
			<xs:attribute name="publication-type" type="publication-type" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="classification-item" type="classification-item-type">
		<xs:annotation>
			<xs:appinfo>	
			<sch:pattern name="Validate level attribute against tree">
				<sch:rule context="classification-item[@level]">
					<sch:assert test="attribute::level = count(ancestor::classification-item)+/class-scheme/classification-item[1]/attribute::level" diagnostics="Description_1">
						@level=<value-of select="count(ancestor::classification-item)+/class-scheme/classification-item[1]/attribute::level"/> expected for <name/><value-of select="child::classification-symbol" />! ***</sch:assert>
					<sch:report test="attribute::level != count(ancestor::classification-item)+/class-scheme/classification-item[1]/attribute::level and preceding-sibling::classification-item[1]" diagnostics="Description_2">
						@level=<value-of select="count(ancestor::classification-item)+/class-scheme/classification-item[1]/attribute::level"/> expected for <name/><value-of select="child::classification-symbol" />!***</sch:report>
				</sch:rule>
			</sch:pattern>
			

		<sch:diagnostics>
				<sch:diagnostic id="Description_1">
				: <value-of select="child::classification-symbol"/>[@level=<value-of select="@level"/>] is a child of <value-of select="parent::classification-item/classification-symbol"/>[@level=<value-of select="parent::classification-item/attribute::level"/>] ***     
				</sch:diagnostic>
				<sch:diagnostic id="Description_2">
				: <value-of select="child::classification-symbol"/>[@level=<value-of select="@level"/>] follows <value-of select="preceding-sibling::*[1]/classification-symbol"/>[@level=<value-of select="preceding-sibling::*[1]/attribute::level"/>] and is a child of <value-of select="parent::classification-item/classification-symbol"/>[@level=<value-of select="parent::classification-item/attribute::level"/>] ***     
				</sch:diagnostic>
			</sch:diagnostics>
			</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="classification-item-type">
		<xs:annotation>
			<xs:documentation>
				The classification-item element must at least have a symbol. All other elements are optional 
				Note the classification element is contained within itself. This is a recursive method to create a 'tree' structure of classifications 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="classification-symbol" type="symbol-type">
				<xs:annotation>
					<xs:documentation>A CPC symbol made up of the following consituent parts, constrained by the cpc-symbol-type
          					SECTION: Sections are the highest level of hierarchy of the IPC Classification. Each section is designated by one of the capital letters 'A' through 'H' as recommended in WIPO Standard ST.8, with the addition of section 'Y'.
           					CLASS: Each section is subdivided into classes which are the second hierarchical level of the IPC Classification. Each class symbol consists of the section symbol followed by a two-digit number as recommended in WIPO standard ST.8.
            					SUBCLASS: Each class comprises one or more subclasses which are the third hierarchical level of the IPC Classification. Each subclass symbol consists of the class symbol followed by a capital letter from 'A' to 'Z' as recommended in WIPO Standard ST.8.
            					MAINGROUP: Main Group consists of one- to four-digit number (1 to 9999) as recommended in WIPO Standard ST.8. This field can be blank, if classification level is 'S' (classification in subclasses only)
        					SUBGROUP: Subgroups form subdivisions under the main groups  the IPC Classification. Each subgroup consists of two- to six-digit number (00 to 999999) as recommended in WIPO Standard ST.8. This field can be blank, if classification level is 'S' (classification in subclasses only).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="class-title" minOccurs="0"/>
			<xs:element ref="notes-and-warnings" minOccurs="0"/>
			<xs:element ref="classification-item" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="meta-data" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The element meta-data' is used specifically by the OPS team to allow technical information (meta-data) to be communicated to consumers of this XML.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="level" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="additional-only" type="xs:boolean"/>
		<xs:attribute name="sort-key" type="symbol-type" use="required"/>
		<xs:attribute name="not-allocatable" type="xs:boolean"/>
		<xs:attribute name="breakdown-code" type="xs:boolean"/>
		<xs:attribute name="date-revised" type="xs:date"/>
		<xs:attribute name="status" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="published"/>
					<xs:enumeration value="frozen"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="link-file" type="xs:string"/>
		<xs:attribute name="ipc-concordant" type="ipc-symbol-type"/>
		<xs:attribute name="definition-exists" type="xs:boolean"/>
	</xs:complexType>
	<xs:element name="class-title">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="title-part" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="date-revised" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="title-part">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="text"/>
				<xs:element ref="reference"/>
				<xs:element ref="CPC-specific-text"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="notes-and-warnings">
		<xs:annotation>
			<xs:documentation>
		 		Note Element. Notes are made up of note parts which can have note sub parts.
		 		Each note sub part can have it's own note part forming a tree structure of notes.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="note" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="date-revised" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="note">
		<xs:complexType mixed="false">
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="note-paragraph"/>
				</xs:sequence>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="note"/>
						<xs:enumeration value="warning"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="note-paragraph">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="markup">
					<xs:attribute name="warning-type">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="reclass-destination"/>
								<xs:enumeration value="reclass-source"/>
								<xs:enumeration value="ipc-not-used"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="subnote">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="note-paragraph" maxOccurs="unbounded"/>
			</xs:sequence>
		<xs:attribute name="type">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Roman"/>
						<xs:enumeration value="roman"/>
						<xs:enumeration value="number"/>
						<xs:enumeration value="Alpha"/>
						<xs:enumeration value="alpha"/>
						<xs:enumeration value="bullet"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="class-transfers">
		<xs:annotation>
			<xs:documentation>
				A list of classifications transferred to other classifications along with the date of transfer
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="class-transfer" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="from" type="transfer-classes-type" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="to" type="transfer-classes-type" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="date" type="xs:string"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="transfer-classes-type">
		<xs:annotation>
			<xs:documentation>
				A list of transferred from and transferred to classifications.
				For each classification we have a boolean attribute to define the use of subgroups
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="class-ref" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="use-sub-groups" type="xs:boolean"/>
	</xs:complexType>
	<xs:element name="text" type="markup"/>
	<xs:element name="reference" type="markup"/>
	<xs:element name="CPC-specific-text" type="markup"/>
	<xs:complexType name="markup" mixed="true">
		<xs:annotation>
			<xs:documentation>HTML markup potentially contained within elements such as title, warning and notes etc.</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="text"/>
			<xs:element ref="reference"/>
			<xs:element ref="CPC-specific-text"/>
			<xs:element ref="class-ref"/>
			<xs:element ref="pre"/>
			<xs:element ref="br"/>
			<xs:element ref="u"/>
			<xs:element ref="p"/>
			<xs:element ref="media"/>
			<xs:element ref="class-transfers"/>
			<xs:element ref="subnote"/>
			<xs:element ref="sub"/>
			<xs:element ref="sup"/>
			<xs:element name="link" type="xs:string"/>
		</xs:choice>
		<xs:attribute name="scheme" type="classification-scheme-list"/>
	</xs:complexType>
	<xs:element name="class-ref">
		<xs:annotation>
			<xs:documentation>
				An element to encapsulate a cross referenced classification symbol
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="scheme" type="classification-scheme-list" use="required"/>
					<xs:attribute name="qualifier" type="xs:string"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="classification-scheme-list">
		<xs:annotation>
			<xs:documentation>
				Simple type describing a list of schemes
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="cpc"/>
			<xs:enumeration value="ipc"/>
			<xs:enumeration value="not-mapped"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="media">
		<xs:complexType>
			<xs:attribute name="id" type="xs:string"/>
			<xs:attribute name="file-name" type="xs:string"/>
			<xs:attribute name="type">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="gif"/>
						<xs:enumeration value="jpeg"/>
						<xs:enumeration value="tif"/>
						<xs:enumeration value="bmp"/>
						<xs:enumeration value="png"/>
						<xs:enumeration value="wav"/>
						<xs:enumeration value="wma"/>
						<xs:enumeration value="wmv"/>
						<xs:enumeration value="mp3"/>
						<xs:enumeration value="unknown"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="alt" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="pre" type="markup"/>
	<xs:element name="sub" type="xs:string"/>
	<xs:element name="sup" type="xs:string"/>
	<xs:element name="br"/>
	<xs:element name="p"/>
	<xs:element name="u" type="markup"/>
	<xs:simpleType name="symbol-type">
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-HY]([0-9][0-9])?[A-Z]?([1-9]\d{0,2}/\d{2,6})?"/>
			<xs:pattern value="[A-HY]([0-9][0-9])?[A-Z]?(2\d{3}/\d{2,6})?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ipc-symbol-type">
		<xs:restriction base="xs:string">
			<xs:pattern value="([A-H]([0-9][0-9])?[A-Z]?([1-9]\d{0,2}/\d{2,6})?)|(CPCONLY)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="publication-type">
		<xs:restriction base="xs:string">
			<xs:enumeration value="official"/>
			<xs:enumeration value="test"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
